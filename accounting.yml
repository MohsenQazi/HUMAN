version: '3.9'

volumes:
 mongoDB:

services:
 reverse-proxy:
  image: 127.0.0.1:5000/traefik
  command:
   - --providers.docker.swarmmode
   - --providers.docker.exposedbydefault=false # traefik.enable=true
   - --providers.file.directory=/config # doc.traefik.io/traefik/providers/file/#filename
   - --providers.file.watch=true
   - --entrypoints.web.address=:80
   - --entrypoints.websecure.address=:443
   - --entrypoints.api.address=:8000

#   - --certificatesresolvers.letsE.acme.tlschallenge=true
#   - --certificatesresolvers.letsE.acme.email=$MAIL
#   - --certificatesresolvers.letsE.acme.storage=/letsEncrypt/acme.json
#   - --certificatesresolvers.letsE.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory #staging server for test/debug doc.traefik.io/traefik/https/acme/#caserver

   - --api # :8080/dashboard/
   - --log.level=DEBUG
   - --accesslog
  ports:
   - target: 80
     published: 80
     mode: host # ip whiteListening (community.traefik.io/t/3897)
   - target: 443
     published: 443
     mode: host
   - target: 8000
     published: 8000
     mode:host
  volumes:
   - /var/run/docker.sock:/var/run/docker.sock:ro
   - ./dynamic_conf.toml:/config/dynamic_conf.toml:ro
   - ./letsEncrypt/:/letsEncrypt/:ro
  deploy:
   restart_policy:
    condition: on-failure
   placement:
    constraints: [node.role==manager]
   labels:
    - traefik.enable=true

    - traefik.http.routers.traefik-http.rule=Host(`${DOMAIN}`)
    - traefik.http.routers.traefik-http.entrypoints=http
    - traefik.http.routers.traefik-http.middlewares=redirecToHTTPS
    - traefik.http.middlewares.redirecToHTTPS.redirectscheme.scheme=https
    - traefik.http.middlewares.redirecToHTTPS.redirectscheme.permanent=true

    - traefik.http.routers.traefik-https.rule=Host(`${DOMAIN}`)
    - traefik.http.routers.traefik-https.entrypoints=https
    - traefik.http.routers.traefik-https.tls=true
    - traefik.http.routers.traefik-https.tls.certresolver=letsE
    - traefik.http.routers.traefik-https.service=api@internal
    - traefik.http.routers.traefik-https.middlewares=adminAuth,whiteListening
    - traefik.http.middlewares.adminAuth.basicauth.users=admin:${TraefikPass}
    
    - traefik.http.middlewares.whiteListening.ipwhitelist.sourcerange=${WhiteList}
    - traefik.http.serives.api.loadbalancer.server.port=8000

account-manager:
  image: 127.0.0.1:5000/manage_app
  environment:
   - HOST=$DOMAIN
   - PORT=5011
   - AUTH_SERVER_ADDR=$WorkerIP
   - AUTH_SERVER_PORT=2011
   - MONGO_SERVER_ADDR=$WorkerIP
   - MONGO_SERVER_PORT=27017
  deploy:
   placement:
    constraints: [node.role==manager]
   labels:
    - traefik.enable=true

    - traefik.http.services.accounting_account-manager.loadbalancer.server.port=5000 #doc.traefik.io/traefik/providers/docker/#port-detection_1
    - traefik.http.routers.accounting_account-manager.rule=Host(`${DOMAIN}`) $$ PathPrefix(`/accountico/`)
    - traefik.http.routers.accounting_account-manager.entrypoints=websecure
    - traefik.http.routers.accounting_account-manager.tls=true
 #   - traefik.http.routers.accounting_account-manager.tls.certresolver=letsE

#    - traefik.http.routers.accounting_account-manager.middlewares=auth_api
#    - traefik.http.middlewares.auth_api.forwardauth.address=$WorkerIP:2021
  ports:
   - 5011:5000

 authenticator:
  image: 127.0.0.1:5000/auth_app
  environment:
   - AUTHENTIQ_DB_HOST=$WorkerIP
   - AUTHENTIQ_DB_PORT=27017
   - AUTHENTIQ_DB_NAME=authentiq
  deploy:
   placement:
    constraints: [node.role==worker]
   labels:
    - traefik.enable=true

    - traefik.http.services.accounting_authenticator.loadbalancer.server.port=2000
    - traefik.http.routers.accounting_authenticator.rule=Host(`$WorkerIP`) && PathPrefix(`/authentiq/v1/`)
    - traefik.http.routers.accounting_authenticator.entrypoints=websecure
    - traefik.http.routers.accounting_authenticator.tls=true
#    - traefik.http.routers.accounting_authenticator.tls.certresolver=letsE
  ports:
   - 2011:2000

 mongodb:
  image: 127.0.0.1:5000/mongo
  deploy:
   #mode: global
   restart_policy:
    condition: on-failure
   placement:
    constraints: [node.role==worker]
   labels: [traefik.enable=false]
  ports:
   - 27017:27017
  volumes:
   - mongoDB:/data/db
